<?xml version="1.0" encoding="UTF-8" ?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd   
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">  
    <!-- bean definitions here -->  
    <context:component-scan base-package="com.ld"></context:component-scan>
    
    <!-- 配置读取外部配置文件 -->  
    <context:property-placeholder location="classpath:jdbc.properties" />

 <!-- 加载jdbc.properties配置文件 -->  
<!--       <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">     -->
<!--         <property name="locations">     -->
<!--            <list>     -->
<!--                  <value>classpath:jdbc.properties</value>     -->
<!--            </list>     -->
<!--         </property>     -->
<!--      </bean>   -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
    	destroy-method="close" p:driverClassName="${jdbc.driverClassname}"
    	p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}"/>
	<context:annotation-config /> <!-- 此行语句使得resource autowired 等四个注解可以使用 --> 
	<!-- 实例化jdbcTemplate,同时注入数据源 -->  
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource"/>
		
		 <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/ld/*/mapper/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.ld.*.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
		
		
	<!-- 配置事务管理器 --> 
	<bean id="txmanager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务扫描开始(开启@Tranctional) -->  
	<tx:annotation-driven transaction-manager="txManager" /> 
</beans>